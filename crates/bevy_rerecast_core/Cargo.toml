[package]
name = "bevy_rerecast_core"
description = "Core editorless Bevy integration for bevy_rerecast"
version = "0.3.0-rc.0"
authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
keywords = { workspace = true }
categories = { workspace = true }
readme = { workspace = true }

[dependencies]
bevy_ecs = { workspace = true, features = ["bevy_reflect", "serialize"] }
bevy_transform = { workspace = true, features = ["bevy-support"] }
bevy_tasks = { workspace = true }
bevy_derive = { workspace = true }
bevy_reflect = { workspace = true }
bevy_app = { workspace = true }
bevy_math = { workspace = true, features = ["bevy_reflect", "serialize"] }
bevy_platform = { workspace = true }

# debug-plugin
bevy_gizmos = { workspace = true, optional = true, features = ["bevy_render"] }
bevy_color = { workspace = true, optional = true }
bevy_pbr = { workspace = true, optional = true }

# Serde is already brought in by bevy_asset, so no need to make it optional
serde = { workspace = true }

critical-section = { workspace = true, optional = true }
bevy_asset = { workspace = true, optional = true }
anyhow = { workspace = true }
tracing = { workspace = true, optional = true }
thiserror = { workspace = true }
bincode = { workspace = true }
glam = { workspace = true }
rerecast = { workspace = true, features = ["bevy_reflect", "serialize"] }

# bevy_mesh
bevy_mesh = { workspace = true, optional = true }
bevy_render = { workspace = true, optional = true }


[features]
default = ["bevy_mesh", "debug_plugin", "std", "bevy_asset"]
# Recommended defaults for no_std applications
default_no_std = ["libm", "critical-section"]
std = [
    "bevy_ecs/std",
    "bevy_transform/std",
    "bevy_reflect/std",
    "bevy_app/std",
    "bevy_math/std",
    "bevy_platform/std",
    "bevy_color?/std",
    "serde/std",
    "anyhow/std",
    "tracing?/std",
    "thiserror/std",
    "bincode/std",
    "glam/std",
    "rerecast/std",
]
critical-section = ["dep:critical-section", "bevy_platform/critical-section"]
bevy_mesh = ["dep:bevy_mesh", "dep:bevy_render"]
bevy_asset = ["dep:bevy_asset", "std"]
# use libm for no_std support and cross-platform determinism
libm = ["rerecast/libm", "bevy_math/libm", "glam/libm"]
# Use std if available, but fall back to libm if not
nostd-libm = ["rerecast/nostd-libm", "bevy_math/nostd-libm", "glam/nostd-libm"]
debug_plugin = [
    "bevy_asset",
    "dep:bevy_gizmos",
    "dep:bevy_color",
    "dep:bevy_render",
    "dep:bevy_mesh",
    "dep:bevy_pbr",
]
# Note: tracing works on all no_std platforms that support atomics
tracing = ["dep:tracing"]

[lints]
workspace = true

[package.metadata.docs.rs]
rustdoc-args = ["-Zunstable-options", "--generate-link-to-definition"]
all-features = true
