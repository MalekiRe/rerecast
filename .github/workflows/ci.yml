name: CI

on:
  pull_request:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  # Sparse cargo registry for faster updates
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  RUSTFLAGS: "-D warnings"
  RUSTDOCFLAGS: "--deny warnings"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - name: Populate target directory from cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install deps
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run cargo clippy
        run: cargo clippy --all-targets

  format:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --check --all

  doc:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
      RUSTDOCFLAGS: "--deny warnings"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Populate target directory from cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install deps
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run cargo doc
        run: cargo doc --no-deps --all-features

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Populate target directory from cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install deps
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run cargo test
        run: cargo test --all-features --features bevy/x11
      - name: Run doc tests
        run: LD_LIBRARY_PATH="$(rustc --print target-libdir)" cargo test --doc --features bevy/x11
  cargo-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - name: Populate target directory from cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install deps
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run cargo publish dry run
        run: cargo publish --dry-run
  check-compiles-no-std:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - "x86_64-unknown-none"
          - "wasm32v1-none"
          - "thumbv6m-none-eabi"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Check rerecast
        run: cargo check --no-default-features --features default_no_std --manifest-path crates/rerecast/Cargo.toml --target ${{ matrix.target }}
      - name: Check bevy_rerecast_core
        run: cargo check --no-default-features --features default_no_std --manifest-path crates/bevy_rerecast_core/Cargo.toml --target ${{ matrix.target }}
